<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instantiate Variables
var incrementVolume = 0;
var holdingKey = false;
var canInteract = false;
global.gameVolume = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Decrease volume at a speed based on how long left button is held
if (keyLeft &amp;&amp; !keyRight){
    incrementVolume += 1;
    gameVolume += 0.05;
    
    // Gradually speed up the increase in volume as the player holds the button more
    if (incrementVolume &lt;= 5){
        alarm[0] = 10;
    }
    
    if (3 &lt; incrementVolume &lt;= 10){
        alarm[0] = 7;
    }
    
    if (10 &lt; incrementVolume &lt;= 20){
        alarm[0] = 3;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checks for Left and Right arrow keys
keyLeft = keyboard_check(vk_left);
keyRight = keyboard_check(vk_right);
keyEscape = keyboard_check(vk_escape);

if (obj_VolumeChange.image_alpha &gt;= 1){ // If the Volume Changer is visible, enable interaction with it
    canInteract = true;
}

if (canInteract){
    if (keyEscape){
        canInteract = false;
    }
    
    if (keyLeft &amp;&amp; !keyRight){ // If left key is pressed and right key is not
        if (!holdingKey){ // Checks for key holding so alarm isn't constantly set to '1'
            holdingKey = true;
            alarm[0] = 1
        }
    }
    
    else if (keyRight &amp;&amp; !keyLeft){ // If right key is pressed and left is not
        if (!holdingKey){ // Checks for key holding so alarm isn't constantly set to '1'
            holdingKey = true;
            alarm[1] = 1
        }
    }
    
    else {
        incrementVolume = 0; // Reset incrementVolume when no button is pressed
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
