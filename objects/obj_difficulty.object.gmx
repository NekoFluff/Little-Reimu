<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blackscreen</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instantiating menu array
menu[0] = "Easy";
menu[1] = "Medium";
menu[2] = "Hard";
menu[3] = "Insane";
menu[4] = "Back";

space = 48; //Space between text
dpos = 0; //Select position
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving menu/selection
var move = 0;
keyUp = keyboard_check_pressed(vk_up);
keyDown = keyboard_check_pressed(vk_down);
keyEnter = keyboard_check_pressed(vk_enter);
keyZ = keyboard_check_pressed(ord("Z"));

move -= max(keyUp, 0);
move += max(keyDown, 0);

//Move menu around
if (move != 0){
    dpos += move;
    //Wrap menu position around
    if (dpos &lt; 0){
        dpos = array_length_1d(menu) - 1;
    }
    if (dpos &gt; array_length_1d(menu) - 1){
        dpos = 0;
    }
}

//Select an option
var select;
select = max(keyEnter, keyZ, 0);
if (select == 1){
    scr_difficulty();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the text
draw_set_halign(fa_middle);
draw_set_valign(fa_middle);
draw_set_font(fnt_menu);
draw_set_color(c_white);

for (i = 0; i &lt; array_length_1d(menu); i++){
    if (i == dpos){ // Current selected option
        draw_set_font(fnt_selected);
        draw_set_alpha(1);
        draw_text(room_width/2, 140 + (i * space), string(menu[i]));
    } else { // Not selected options
        draw_set_font(fnt_menu);
        draw_set_alpha(0.6);
        draw_text(room_width/2, 140 + (i * space), string(menu[i]));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
